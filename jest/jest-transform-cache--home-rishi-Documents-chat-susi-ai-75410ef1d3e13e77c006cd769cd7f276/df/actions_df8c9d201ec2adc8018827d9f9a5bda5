/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.






createMessage = createMessage; /* istanbul ignore next */exports.








receiveCreatedMessage = receiveCreatedMessage; /* istanbul ignore next */exports.








clickThread = clickThread; /* istanbul ignore next */exports.






receiveAll = receiveAll; /* istanbul ignore next */exports.






createSUSIMessage = createSUSIMessage; /* istanbul ignore next */exports.








postSUSIMessage = postSUSIMessage;var /* istanbul ignore next */_ChatAppDispatcher = require('./dispatcher/ChatAppDispatcher'); /* istanbul ignore next */var _ChatAppDispatcher2 = _interopRequireDefault(_ChatAppDispatcher);var /* istanbul ignore next */_ChatWebAPIUtils = require('./utils/ChatWebAPIUtils'); /* istanbul ignore next */var ChatWebAPIUtils = _interopRequireWildcard(_ChatWebAPIUtils);var /* istanbul ignore next */_ChatMessageUtils = require('./utils/ChatMessageUtils'); /* istanbul ignore next */var ChatMessageUtils = _interopRequireWildcard(_ChatMessageUtils);var /* istanbul ignore next */_ChatConstants = require('./constants/ChatConstants'); /* istanbul ignore next */var _ChatConstants2 = _interopRequireDefault(_ChatConstants);function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}let ActionTypes = /* istanbul ignore next */_ChatConstants2.default.ActionTypes;function createMessage(text, currentThreadID) {let message = ChatMessageUtils.getCreatedMessageData(text, currentThreadID); /* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({ type: ActionTypes.CREATE_MESSAGE, message });ChatWebAPIUtils.createMessage(message);};function receiveCreatedMessage(createdMessage, tempMessageID) {/* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({ type: ActionTypes.RECEIVE_RAW_CREATED_MESSAGE, rawMessage: createdMessage, tempMessageID });};function clickThread(threadID) {/* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({ type: ActionTypes.CLICK_THREAD, threadID });};function receiveAll(rawMessages) {/* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({ type: ActionTypes.RECEIVE_RAW_MESSAGES, rawMessages });};function createSUSIMessage(createdMessage, currentThreadID) {let message = ChatMessageUtils.getSUSIMessageData(createdMessage, currentThreadID); /* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({ type: ActionTypes.CREATE_SUSI_MESSAGE, message });ChatWebAPIUtils.receiveSUSIMessage(message);};function postSUSIMessage(receivedSUSIMessage, tempMessageID) {
  /* istanbul ignore next */_ChatAppDispatcher2.default.dispatch({
    type: ActionTypes.RECEIVE_SUSI_MESSAGE,
    rawMessage: receivedSUSIMessage,
    tempMessageID });

}