/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.
convertRawMessage = convertRawMessage; /* istanbul ignore next */exports.







getCreatedMessageData = getCreatedMessageData; /* istanbul ignore next */exports.











getSUSIMessageData = getSUSIMessageData;var /* istanbul ignore next */_jquery = require('jquery'); /* istanbul ignore next */var _jquery2 = _interopRequireDefault(_jquery);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function convertRawMessage(rawMessage, currentThreadID) {return (/* istanbul ignore next */Object.assign({}, rawMessage, { date: new Date(rawMessage.timestamp), isRead: rawMessage.threadID === currentThreadID }));};function getCreatedMessageData(text, currentThreadID) {var timestamp = Date.now();return { id: 'm_' + timestamp, threadID: currentThreadID, authorName: 'You', date: new Date(timestamp), text: text, isRead: true };};function getSUSIMessageData(createdMessage, currentThreadID) {
  var timestamp = Date.now();

  let receivedMessage = {
    id: 'm_' + timestamp,
    threadID: currentThreadID,
    authorName: 'SUSI', // hard coded for the example
    date: new Date(timestamp),
    text: '',
    isRead: true };


  /* istanbul ignore next */_jquery2.default.ajax({
    url: 'http://api.asksusi.com/susi/chat.json?q=' + createdMessage.text,
    dataType: 'jsonp',
    jsonpCallback: 'p',
    jsonp: 'callback',
    crossDomain: true,
    async: false,
    success: function /* istanbul ignore next */success(response) {
      receivedMessage.text = response.answers[0].actions[0].expression;
    },
    error: function /* istanbul ignore next */error(errorThrown) {
      console.log(errorThrown);

    } });


  return receivedMessage;
}